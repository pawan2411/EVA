import torch
from transformers import AutoTokenizer, AutoModelForCausalLM, pipeline
model_name = 'pawan2411/fused-semm5-LoRA'
tokenizer = AutoTokenizer.from_pretrained(model_name)
model = AutoModelForCausalLM.from_pretrained(
        model_name,
        torch_dtype=torch.bfloat16,
        device_map="auto",
        trust_remote_code=True,
    )

res_file = open ("result_dev_mm_sft.txt","w", encoding='utf-8')
import json
open_file = open("Test_Numerical_Reasoning.json")
data = json.load(open_file)
ccc=0
print(len(data))
all_t0_check = [0, 10, 21, 33, 40, 51, 52, 54, 62, 67, 83, 88, 90, 98, 104, 109, 111, 143, 147, 148, 152, 155, 156, 159, 168, 187, 189, 210, 213, 215, 220, 226, 233, 239, 243, 246, 257, 258, 263, 269, 273, 281, 282, 284, 287, 290, 293, 296, 300, 303, 309, 312, 322, 329, 334, 338, 345, 349, 371, 382, 384, 386, 392, 395, 396, 398, 399, 400, 403, 412, 413, 416, 421, 424, 438, 450, 458, 466, 474, 476, 479, 485, 486, 495, 497, 502, 506, 509, 510, 512, 517, 522, 536, 538, 541, 542, 545, 546, 552, 560, 568, 571, 573, 575, 582, 585, 589, 590, 597, 598, 601, 602, 606, 608, 618, 620, 624, 625, 628, 633, 668, 673, 676, 679, 686, 699, 700, 701, 703, 704, 708, 712, 713, 718, 720, 724, 725, 726, 728, 733, 738, 755, 756, 758, 760, 766, 772, 774, 775, 776, 778, 779, 783, 789, 797, 799, 800, 806, 810, 813, 815, 827, 830, 832, 833, 840, 847, 848, 852, 853, 856, 858, 862, 864, 865, 866, 867, 875, 880, 885, 886, 892, 893, 894, 898, 915, 917, 926, 932, 934, 939, 942, 949, 958, 962, 975, 994, 996, 997, 999, 1014, 1018, 1021, 1023, 1044, 1046, 1048, 1051, 1052, 1069, 1070, 1073, 1084, 1089, 1090, 1091, 1097, 1105, 1110, 1115, 1123, 1125, 1131, 1146, 1152, 1154, 1156, 1157, 1159, 1161, 1165, 1167, 1172, 1173, 1182, 1188, 1189, 1191, 1192, 1197, 1208, 1210, 1211, 1213, 1226, 1227, 1228, 1231, 1234, 1240, 1249, 1251, 1253, 1260, 1262, 1265, 1276, 1282, 1286, 1296, 1298, 1301, 1303, 1306, 1309, 1313, 1316, 1323, 1337, 1340, 1344, 1347, 1349, 1353, 1354, 1357, 1361, 1371, 1374, 1386, 1396, 1398, 1403, 1404, 1406, 1414, 1435, 1442, 1447, 1466, 1471, 1474, 1475, 1476, 1479, 1480, 1486, 1498, 1502, 1505, 1507, 1510, 1523, 1533, 1537, 1548, 1559, 1562, 1564, 1566, 1568, 1572, 1575, 1577, 1579, 1586, 1588, 1590, 1597, 1602, 1603, 1625, 1629, 1634, 1635, 1640, 1652, 1658, 1674, 1675, 1676, 1677, 1688, 1691, 1698, 1702, 1708, 1712, 1714, 1715, 1716, 1725, 1732, 1741, 1747, 1748, 1752, 1755, 1757, 1764, 1772, 1773, 1776, 1780, 1785, 1793, 1795, 1799, 1804, 1816, 1823, 1829, 1838, 1839, 1841, 1844, 1848, 1850, 1859, 1865, 1867, 1869, 1882, 1886, 1895, 1902, 1904, 1911, 1912, 1918, 1921, 1922, 1929, 1930, 1933, 1938, 1939, 1944, 1956, 1962, 1967, 1978, 1986, 1989, 1993, 1998, 2003, 2006, 2020, 2024, 2028, 2038, 2044, 2048, 2049, 2059, 2060, 2068, 2070, 2072, 2089, 2096, 2111, 2113, 2123, 2128, 2134, 2147, 2151, 2157, 2160, 2161, 2167, 2169, 2170, 2186, 2187, 2193, 2195, 2209, 2213, 2216, 2221, 2222, 2223, 2226, 2243, 2249, 2252, 2258, 2260, 2261, 2274, 2276, 2288, 2299, 2300, 2304, 2313, 2317, 2318, 2319, 2325, 2328, 2335, 2340, 2341, 2345, 2355, 2356, 2361, 2365, 2366, 2370, 2371, 2386, 2387, 2390, 2399, 2407, 2409, 2411, 2416, 2425, 2430, 2436, 2437, 2442, 2455, 2464, 2466, 2469, 2472, 2475, 2489, 2491, 2492, 2494, 2498, 2501, 2508, 2511, 2512, 2517, 2518, 2521, 2522, 2524, 2525, 2526, 2540, 2541, 2553, 2554, 2556, 2558, 2563, 2567, 2582, 2583, 2590, 2597, 2609, 2618, 2619, 2620, 2622, 2625, 2632, 2633, 2639, 2644, 2648, 2649, 2650, 2652, 2655, 2665, 2667, 2673, 2675, 2685, 2687, 2690, 2700, 2705, 2713, 2717, 2723, 2727, 2745, 2747, 2752, 2754, 2755, 2757, 2761, 2764, 2771, 2782, 2784, 2785, 2786, 2789, 2790, 2792, 2799, 2802, 2806, 2808, 2826, 2829, 2838, 2841, 2847, 2856, 2857, 2858, 2863, 2864, 2866, 2867, 2869, 2874, 2876, 2877, 2882, 2889, 2890, 2895, 2896, 2902, 2907, 2927, 2933, 2942, 2944, 2946, 2949, 2958, 2959, 2962, 2964, 2968, 2970, 2972, 2975, 2984, 3009, 3016, 3021, 3024, 3027, 3033, 3038, 3041, 3059, 3062, 3063, 3068, 3074, 3080, 3081, 3087, 3095, 3099, 3100, 3102, 3103, 3108, 3111, 3113, 3114, 3137, 3151, 3152, 3158, 3162, 3164, 3169, 3176, 3183, 3184, 3188, 3201, 3202, 3212, 3213, 3214, 3216, 3217, 3222, 3223, 3229, 3237, 3238, 3239, 3249, 3252, 3257, 3260, 3266, 3268, 3285, 3297, 3300, 3302, 3304, 3307, 3311, 3332, 3335, 3339, 3345, 3353, 3358, 3360, 3364, 3372, 3374, 3376, 3383, 3393, 3394, 3395, 3412, 3415, 3446, 3448, 3460, 3462, 3463, 3466, 3473, 3476, 3487, 3491, 3498, 3508, 3511, 3512, 3514, 3517, 3521, 3534, 3542, 3545, 3555, 3561, 3565, 3566, 3567, 3572, 3578, 3583, 3585, 3589, 3594, 3605, 3607, 3612, 3617, 3619, 3628, 3629, 3631, 3633, 3634, 3635, 3638, 3649, 3661, 3674, 3675, 3677, 3682, 3683, 3686, 3699, 3701, 3702, 3710, 3711, 3715, 3719, 3720, 3726, 3729, 3736, 3739, 3745, 3755, 3760, 3771, 3777, 3784, 3785, 3788, 3791, 3796, 3799, 3806, 3810, 3811, 3822, 3823, 3825, 3828, 3844, 3851, 3854, 3868, 3878, 3883, 3886, 3887, 3891, 3895, 3907, 3912, 3914, 3920, 3921, 3924, 3931, 3938, 3939, 3955, 3957, 3965, 3969, 3970, 3973, 3982, 3983, 3988, 3989, 3992, 3995, 3996, 4001, 4008, 4020, 4023, 4029, 4030, 4033, 4037, 4047, 4048, 4050, 4057, 4062, 4071, 4084, 4090, 4094, 4097, 4099, 4102, 4107, 4108, 4131, 4135, 4137, 4138, 4139, 4144, 4146, 4148, 4156, 4158, 4160, 4161, 4169, 4174, 4176, 4195, 4214, 4215, 4220, 4221, 4226, 4227, 4231, 4232, 4234, 4235, 4239, 4241, 4242, 4249, 4250, 4252, 4254, 4256, 4261, 4270, 4271, 4277, 4284, 4286, 4288, 4295, 4297, 4298, 4309, 4312, 4315, 4319, 4321, 4322, 4328, 4335, 4340, 4345, 4349, 4357, 4360, 4367, 4376, 4382, 4387, 4400, 4401, 4405, 4408, 4409, 4417, 4418, 4424, 4426, 4433, 4435, 4436, 4437, 4441, 4443, 4445, 4451, 4453, 4454, 4456, 4465, 4471, 4480, 4489, 4505, 4514, 4529, 4535, 4538, 4551, 4553, 4561, 4565, 4578, 4581, 4582, 4589, 4592, 4594, 4595, 4601, 4612, 4614, 4615, 4627, 4631, 4638, 4643, 4646, 4661, 4662, 4663, 4676, 4677, 4682, 4689, 4697, 4698, 4699, 4704, 4709, 4714, 4715, 4718, 4719, 4723, 4734, 4738, 4739, 4752, 4753, 4754, 4764, 4765, 4770, 4775, 4779, 4790, 4795, 4798, 4805, 4809, 4813, 4815, 4816, 4820, 4824, 4832, 4834, 4842, 4844, 4849, 4855, 4858, 4860, 4867, 4875, 4877, 4880, 4884, 4892, 4902, 4903, 4910, 4916, 4917, 4920]
for dp in data:
  if ccc not in all_t0_check:
  	continue
  # data = json.loads(line)
  human_t = "context: "+dp["news"]+"\n"+"question: "+dp["masked headline"]
  llm_ans = "Answer: "
  input_text = human_t+"\n"+llm_ans
  input_text = input_text.split(")")[1]
  tokenized = tokenizer(input_text, return_tensors="pt").to("cuda:0")
  model.eval()
  torch.no_grad()
  generated_indices = model.generate(
    **tokenized,
    max_new_tokens=256,
    do_sample=True,)
  res = tokenizer.batch_decode(generated_indices)
  res2 = res[0].replace("\n","#####")
  print(res2)
  res_file.write(res2+"\n")
  print(ccc,"done")
  ccc= ccc+1
